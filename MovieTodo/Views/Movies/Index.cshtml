@model IEnumerable<MovieTodo.Models.Movie>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<h3>Movie Count: @ViewData["MoviesCount"] </h3>
<h3>Movies Watched: @ViewData["MoviesWatched"]</h3>

<hr />
<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label class="control-label" for="Title">Title</label>
        <input class="form-control" type="text" data-val="true" data-val-length="The field Title must be a string with a minimum length of 3 and a maximum length of 60." data-val-length-max="60" data-val-length-min="3" data-val-required="The Title field is required." id="Title" name="Title" value="">
        <span class="text-danger field-validation-valid" data-valmsg-for="Title" data-valmsg-replace="true"></span>
        @*<label asp-for= "Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />*@
        @*<span asp-validation-for="..." class="text-danger"></span>*@
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>
</form>

<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Watched)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Watched)
            </td>
            <td>
                <a asp-action="SetWatched" asp-route-id="@item.ID">Set Watched</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a> 
            </td>
        </tr>
}
    </tbody>
</table>
